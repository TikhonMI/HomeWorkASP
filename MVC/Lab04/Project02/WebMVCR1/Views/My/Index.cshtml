@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@{
    //Layout = null; //Lab4.2.1 устанавливает значение свойства Layout на null, представление является автономным, оно будет показывать все содержимое которое должно вернуться клиенту.

    /* Lab4.2(3)Использование макета _ViewStart.3-4 Во всех представлениях удаляем строку присвоения шаблона.
    Layout = "~/Views/_BasicLayout.cshtml"; //Lab4.2(2)Применение макета.1-4 Применяем макет _BasicLayout
    ViewBag.Title = "Главная"; //Lab4.2(2)Применение макета.1-4 значение для свойства ViewBag.Title будет использоваться в качестве контента элемента title в HTML документе
    */
    
}
<!--Lab3.1(2)Создание представления.5 Добавили тег <div> и текст для вывода-->
<div>
    <!--Lab3.1(2)Создание представления.6 динамически присвоилось ViewBag.Greeting и ViewData["Mes"] метода действия в представление-->
    @ViewBag.Greeting, спасибо, что зашли и @ViewData["Mes"]

    <!--Lab3.2(2)Связь главной формы и формы ввода данных.1
    Для реализации возможности перехода на форму ввода (она будет создана позднее) с помощью метода ActionLink (принимающего два параметра:
    первый – текст для отображения в ссылке, например, "Введите имя", а второй – выполняемое действие InputData, когда пользователь нажимает
    на ссылку) добавьте ссылку на нее из представления Index.cshtml
    Далее HomeController(MyController)-->
    <p>@Html.ActionLink("Введите свои данные", "InputData")</p>

    <!--Lab3.3(3)Добавление строго типизированного представления для отображения коллекции.4 Для возможности просмотра списка персон добавили ссылку-->
    <p>
        @Html.ActionLink("Посмотрите, кто уже здесь", "OutputData")
    </p>

</div>