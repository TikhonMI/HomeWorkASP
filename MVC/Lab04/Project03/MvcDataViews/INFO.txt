Lab4.3 Использование шаблонов представлений MVC с формированием шаблонов данных

---Lab4.3(1) Создание нового проекта MVC---
1. Создайте новый проект ASP.NET MVC на основе шаблона Веб-приложение ASP.NET Core (модель-представление контроллер)(Майкрософт).
2. В поле Имя введите MvcDataViews.
3. В поле Расположение укажите имя папки проекта (можно оставить по умолчанию)
4. Остальные параметры оставьте по умолчанию

---Lab4.3(2) Создание класса модели---
1. Добавьте в Models новый класс – укажите имя класса Person.cs.
2. Добавьте код для класса Person
3. Выполните построение проекта

---Lab4.3(3) Добавление контроллера-обработчика данных---
Далее будет создан контроллер, содержащий заглушки методов действий, которые будут отображать представления для создания, изменения и показа списка объектов Person.
1. В папку Controllers добавьте новый контроллер (в контекстном меню папки последовательно выберите пункты Добавить и Контроллер)
2. В диалоговом окне Добавить новый шаблонный элемент выберите элемент Контроллер MVC с действиями чтения и записи и нажмите кнопку Добавить.
3. В открывшемся окне Добавление контроллера в поле Имя контроллера введите PersonController и нажмите кнопку Добавить.
4. Изучите содержимое класса контроллера. Он содержит следующие методы действий: Index, Details, Create (для HTTP GET), Create (для HTTP POST), Delete (для HTTP GET), Delete (для HTTP POST), Edit (для HTTP GET) и Edit (для HTTP POST).
5. В поле класса PersonController создайте список объектов Person: static List<Person> people = new List<Person>();
6. В файл добавьте пространство имен модели (если само не добавилось): using MvcDataViews.Models;
7. В классе PersonController в методе действия Index передайте в представление список объектов people: return View(people);
8. Сохраните файл.

---Lab4.3(4) Добавление представления в виде списка---
Далее будет добавлены представления для работы с данными. 
Первое из них – представление в виде списка, отображаемое методом действия Index. Представление будет отображать созданные объекты Person. 
В каждой строке будут указаны ссылки для отображения детального представления или изменения сведений о человеке. 
9. В классе PersonController кликните правой кнопкой мыши метод действия Index и в контекстном меню выберите пункт Добавить представление.
10. В открывшемся окне выберите вариант Представление Razor.
11. В поле Имя представления должно быть (будет предложено) Index.
12. В поле Шаблон выберите элемент List.
13. В списке Класс модели выберите Person (MvcDataViews.Models)
14. Снимите флажок Справочные библиотеки сценариев.
15. Оставьте флажок Использовать страницу макета в установленном положении и оставьте поле макета пустым.
16. Нажмите кнопку Добавить.
17. Проверьте, что в папке Views, в новой папке Person создано представление Index, в котором содержится шаблон для отображения списка данных. 
18. В представлении Index найдите элементы управления Html.ActionLink и в элементе для метода Details укажите параметр item:
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", item ) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
19. Сохраните изменения.

---Lab4.3(5) Добавление представления для создания объектов---
Далее вы добавите представление Create для создания объектов Person. При создании объекта Person определяются значения указанных ранее свойств модели. 
Класс PersonController содержит два метода действия Create. Первый метод действия Create получает запрос HTTP GET и отображает представление Create. Другой метод действия Create получает запрос HTTP POST от представления Create, проверяет допустимость данных, добавляет их в список и выполняет перенаправление к методу действия Index. 
1. В классе PersonController кликните правой кнопкой мыши метод действия Create, обрабатывающий запрос HTTP GET и выберите пункт Добавить представление.
    a. В поле Имя представления должно быть Create.
    b. В списке Шаблон выберите элемент Create.
    c. В списке Класс модели выберите Person(MvcDataViews.Models).
    d. Оставьте флажок Использовать страницу макета в установленном положении и оставьте поле макета пустым, а также остальные поля без изменений.
    e. Нажмите кнопку Добавить.
2. Проверьте, что в папке Views, в папке Person создано представление Create, в котором содержится соответствующий шаблон.
3. В классе PersonController замените метод действия Create, обрабатывающий запрос HTTP POST, на следующий код:
4. Сохраните изменения.

---Lab4.3(6) Добавление представления для отображения сведений---
Представление Details (Сведения) будет отображать значения для отдельного объекта Person. Представление также будет содержать ссылки на представление Edit (Правка) и на представление Index (Список)
1. В классе PersonController кликните правой кнопкой мыши метод действия Details и выберите пункт Добавить представление.
    a. В поле Имя представления должно быть Details.
    b. В списке Шаблон выберите элемент Details.
    c. В списке Класс модели выберите Person(MvcDataViews.Models).
    d. Оставьте флажок Использовать страницу макета в установленном положении и оставьте поле макета пустым, а также остальные поля без изменений.
    e. Нажмите кнопку Добавить.
2. Проверьте, что в папке Views, в папке Person создано представление Details, в котором содержится соответствующий шаблон.
3. В представлении Details найдите элемент управления Html.ActionLink, ссылающийся на представление Edit, и измените стандартный закомментированный текст.
4. В классе PersonController измените метод действия Details так, чтобы он принимал в качестве параметра объект типа Person и передавал этот объект в представление:
5. Сохраните изменения.

---Lab4.3(7) Добавление представления удаления сведений---
Представление Delete (удаления) предоставляет пользователю возможность удалять объект Person из списка. 
Пользователь может либо удалить выбранный объект Person, либо вернуться к представлению списка. 
Класс PersonController содержит два метода действия Delete. Первый метод действия Delete получает запрос HTTP GET и отображает представление удаления. Другой метод действия Delete получает запрос HTTP POST от представления удаления, удаляет выбранный объект и выполняет перенаправление к методу действия Index. 
1. Откройте в редакторе класс PersonController и найдите метод действия Delete.
2. Щелкните метод действия Delete правой кнопкой мыши и выберите пункт Добавить представление.
    a. В поле Имя представления должно быть Delete.
    b. В списке Шаблон выберите элемент Delete.
    c. В списке Класс модели выберите Person(MvcDataViews.Models).
    d. Оставьте флажок Использовать страницу макета в установленном положении и оставьте поле макета пустым, а также остальные поля без изменений.
    e. Нажмите кнопку Добавить.
3. Проверьте, что в папке Views, в папке Person создано представление Delete, в котором содержится соответствующий шаблон.
4. В классе PersonController замените метод действия Delete, обрабатывающий запрос HTTP GET, следующим кодом.
5. Замените метод действия Delete, обрабатывающий запрос HTTP POST, следующим кодом.
6. Сохраните изменения.

---Lab4.3(8) Добавление представления изменения---
Представление Edit (Правка) позволяет изменять значения объекта Person. Класс PersonController содержит два метода действия Edit. Первый метод действия Edit получает запрос HTTP GET и отображает представление изменения. Другой метод действия Edit получает запрос HTTP POST от представления изменения, проверяет допустимость данных, изменяет их в нужном объекте Person и выполняет перенаправление к методу действия Index. 
1. Откройте в редакторе класс PersonController и найдите метод действия Edit, обрабатывающий запрос HTTP GET.
2. Замените метод действия Edit следующим кодом
3. Щелкните метод действия Edit правой кнопкой мыши и выберите пункт Добавить представление.
    a. В поле Имя представления должно быть Edit.
    b. В списке Шаблон выберите элемент Edit.
    c. В списке Класс модели выберите Person(MvcDataViews.Models).
    d. Оставьте флажок Использовать страницу макета в установленном положении и оставьте поле макета пустым, а также остальные поля без изменений.
    e. Нажмите кнопку Добавить.
4. Проверьте, что в папке Views, в папке Person создано представление Edit, в котором содержится соответствующий шаблон
5. В классе PersonController замените метод действия Edit, обрабатывающий запрос HTTP POST, на следующий код.
6. Сохраните изменения и закройте файлы.

---Lab4.3(9) Добавление ссылки на страницу данных---
Добавьте в стартовую страницу ссылку на страницу отображения данных.
1. В папке представлений Shared откройте макетное представление _Layout.
2. Найдите реализацию ссылок на существующие страницы и добавьте по подобным образом ссылку на страницу для отображения данных.
3. Сохраните и закройте файл.

---Lab4.3(10) Проверка работы приложения---
1. Постройте и запустите приложение.
2. На начальной странице щелкните ссылку Список персон.
3. Щелкните ссылку Create New (Создать).
4. Введите значения в полях Name (Имя), Age (Возраст), Phone (Телефон), Email (Электронная почта) и Id (Идентификатор), после чего нажмите кнопку Create (Создать).
Отобразится представление Index, в котором будет присутствовать добавленный человек.
5. Повторите предыдущий шаг несколько раз, чтобы добавить еще несколько записей.
6. В представлении Index щелкните одну из ссылок Details. Отображается представление Details.
7. Щелкните ссылку Back to List.
8. Щелкните одну из ссылок Edit. Отображается представление Edit.
9. Измените имя или возраст человека и выберите команду Save.
Снова отобразится представление Index, в котором будут показаны обновленные поля данных.
10. Щелкните одну из ссылок Delete. Отображается представление Delete.
11. Нажмите кнопку Delete. Представление Index отображается повторно без удаленной записи.
