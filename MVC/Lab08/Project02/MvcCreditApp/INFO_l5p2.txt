-Lab5.2 Настройка работы с данными-
В этом упражнении вы внесете изменения в контроллеры и представления для работы с данными.

---Lab5.2(1) Настройка контроллера---
1. Откройте находящийся в папке Controllers контроллер HomeController.
2. Импортируйте пространство имен MvcCreditApp.Models.
3. В поле класса контроллера создайте экземпляр контекста данных: private readonly CreditContext db;
4. Реализуйте внедрение зависимости с помощью конструктора контроллера (logger можно оставить).
5. В методе Index() обратитесь к контексту, получите все записи о кредитах, создайте свойство Credits в объекте ViewBag и присвойте ему извлеченный список (объект ViewBag является таким объектом, который с помощью свойства передает данные в представление).
6. Постройте проект.

---Lab5.2(2) Изменение представления для отображения данных---
1. Откройте находящиеся в папке Home представление Index.
2. Изучите разметку для позиционирования элементов, для отображения данных будет использован тот же принцип – в виде сетки с указанием строк и столбцов.
3. Добавьте ниже следующий код разметки.
В этом коде создается таблица, в которой будут располагаться данные о программах кредитования. Вся информация помещается в ячейку сетки.
Конструкция @foreach (var c in ViewBag.Credits) использует синтаксис движка представления Razor (после символа @ согласно синтаксису, можно использовать выражения кода на языке C#).
В цикле реализован проход по элементам в объекте ViewBag.Credits, который был создан в методе контроллера, получены свойства каждого элемента и помещены в таблицу.
Ссылка, реализованная с помощью тег-хелпера <a asp-controller="Home" asp-action="CreateBid" asp->Подать заявку на получение кредита &raquo;</a> означает адрес, по которому будет размещаться форма заявки на кредит.
4. Постройте и запустите приложение. После загрузки и генерации базы данных должна отобразится таблица с ранее определенными данными.

---Lab5.2(3) Реализация подачи заявки---
В этой части упражнения будет создан метод CreateBid, который будет отвечать за обработку ввода пользователя при подаче заявки.
1. Добавьте в контроллер HomeController обычный метод для получения информации о существующих кредитах и скопируйте в него код из метода Index().
2. В методе замените Index() замените соответствующий код на вызов метода.
3. Добавьте в контроллер HomeController два метода, определяющие одно действие CreateBid, в первом случае оно выполняется при получении запроса GET, а во втором случае – при получении запроса POST.
	a. Первый метод ActionResult CreateBid() возвращает соответствующее представление c получением всех записей о кредитах и заявках.
	b. Второй метод принимает переданную ему в запросе POST модель newBid и добавляет ее в базу данных. В конце возвращается строка уведомительного сообщения:
4. Добавьте представление CreateBid. Для этого нажмите на метод public ActionResult CreateBid() правой кнопкой и добавьте в проект новое представление, имя (CreateBid) и остальные параметры оставьте по умолчанию (представление будет не типизированным), проверьте, что флажок Использовать страницу макета включен, но само поле пустое.
5. Добавьте в конце файла следующий код отображения существующих заявок и создания формы ввода данных (код разметки можете изменить на свое усмотрение – главное реализовать передачу данных).
Обратите внимание на реализацию списка кредита с помощью цикла foreach, в дальнейшем будет реализована возможность добавления нового типа кредита и в этом случае в списке новый кредит отобразится.
6. Постройте и запустите приложение. Введите данные о заявке и нажмите кнопку "Отправить". После этого заявка попадет в базу данных, а в браузере отобразится соответствующее уведомление.
7. Вернитесь на страницу GreateBid и обновите ее. Проверьте, что информация о существующих заявках отобразилась на странице.

---Lab5.2(4) Стилизация приложения---
В этом приложении по умолчанию применяется фреймворк Bootstrap. Для того, чтобы созданная вами таблица была оформлена в стиле Bootstrap, ей нужно назначить класс table: <table class = "table">.
1. Назначьте класс table таблицам на странице GreateBid <table class="table">
2. Откройте находящийся в папке wwwroot\css файл site.css и добавьте раздел table стиль для всех таблиц.
3. Для таблицы на странице Index добавьте дополнительный класс Bootstrap table-bordered к базовому классу table: <table class="table-bordered">, в этом случае добавятся границы для всех ячеек таблицы.
4. Запустите приложение и убедитесь, что теперь к сайту применена стилизация


